knife-flow 
========
A collection of Chef plugins for managing the migration of cookbooks to environments in different Chef Server organizations.
The main reason for having a workflow around the development and promotion of cookbooks is to ensure quality, reliability and administrative security of the process.  

Requirements
---------------
Right now knife-flow is build with many assumptions:

* The knife-flow assumes you have at least 2 Opscode organizations; one for "development" and one for "production" 
* The "development" organization has one environment called "candidate".
* The "production" organization has an "innovate" and a "production" environments.
* You are using git flow [http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/](http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/) for your chef-repo project.
* You are in the "develop" branch for the plugins to work.
* You have 2 environments in the "production" organization 

Installing knife-flow
-------------------
Be sure you are running the latest version Chef.

These plugins are distributed as ruby files. To install them, copy the files in the <tt>chef-repo/.chef/knife/plugins</tt> directory.

Plugins
---------------

### increment

Increments the cookbooks version by 1 digit at the patch level ( i.e. 2.3.1 -> 2.3.2 )

Uploads the cookbook by running <tt> knife cookbook upload COOCKBOOK1 COOKBOOK2 </tt> 

Commits the changes to the "develop" branch 


  <tt>$ knife increment COOKBOOK1 COOKBOOK2 ... </tt>


This plugin is useful when working on the projects in the "sandbox" stage. The "_default" environment will always load the latest versions of the cookbooks.


### promote

Increments the cookbooks version by 1 digit at the patch level ( i.e. 2.3.1 -> 2.3.2 )

Uploads the cookbook by running <tt> knife cookbook upload COOCKBOOK1 COOKBOOK2 </tt> 

Updates the environments/"ENVIRONMENT.json" file with the list of COOCKBOOK1 COOKBOOK2 and relative new versions.

Uploads the ENVIRONMENT.json file to the "development" Opscode organization.

Commits the changes to the "develop" branch 


  <tt>$ knife promote  ENVIRONMENT(candidate) COOKBOOK1 COOCKBOOK2 ...</tt>


This plugin is useful when working on the projects in the "validation" and "performance" stage. The "candidate" environment will be used to validate the cookbooks versions.


### release

Copies the "candidate" environment cookbook versions and transfer them to the ENVIRONMENT in the "production" org.

Commits all changes and creates a release tag TAG_NAME using the <tt> git flow release start/finish TAG_NAME </tt>.

Uploads all cookbooks to the "production" org.

  <tt>$ knife release ENVIRONMENT(innovate, production) TAG_NAME(2011.2.3) </tt>

This plugin is useful when we are ready to migrate the cookbooks to the environments in the "production" org.

License terms
-------------
Authors:: Johnlouis Petitbon, Jackob Zimmerman, Aaron Suggs 

Copyright:: Copyright (c) 2009-2011 Medidata, Inc.

License:: Apache License, Version 2.0


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

